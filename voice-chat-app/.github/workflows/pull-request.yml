name: Pull Request Workflow

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    outputs:
      summary: ${{ steps.collect-summary.outputs.summary }}
      status: ${{ steps.collect-summary.outputs.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        working-directory: voice-chat-app
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Tests
        working-directory: voice-chat-app
        run: python tests/run_tests.py

      - name: Collect Test Summary
        id: collect-summary
        working-directory: voice-chat-app
        run: |
          python tests/report_statuses.py \
            --report ci_reports/test_results.json \
            --write-summary ci_reports/test-summary.md \
            --set-outputs \
            --suppress-print

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pr-test-results
          path: |
            voice-chat-app/ci_reports/test_results.json
            voice-chat-app/ci_reports/test-summary.md

  report-tests:
    name: Report Tests Statuses
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Publish Test Summary
        run: |
          SUMMARY="${{ needs.run-tests.outputs.summary }}"
          printf '%b\n' "$SUMMARY"
          if [ -n "$GITHUB_STEP_SUMMARY" ]; then
            printf '%b\n' "$SUMMARY" >> "$GITHUB_STEP_SUMMARY"
          fi
